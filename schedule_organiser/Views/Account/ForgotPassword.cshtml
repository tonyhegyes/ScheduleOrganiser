@using schedule_organiser
@{
    ViewBag.Title = MvcApplication.GetDisplayNameFor("forgotPasswordPage_title", "Account");
}
        <ul class="steps" data-bind="foreach: steps">
            <li data-bind="text: $data, 
                css: { selected: $root.steps.indexOf($data) == $root.currentStepId() },
                click: function() {
                    if($root.steps.indexOf($data) < $root.currentStepId())  {
                        $root.goToStep($data); }
                    }"></li>
        </ul>

        <fieldset style="width:35%; margin:0 auto">
            <legend><span data-bind="text: legendText"></span></legend>
            <table style="text-align:center; width:100%">
                <tr>
                    <td>
                        <p style="display:inline; margin: 0 auto" id="instructions_label"></p>
                        <input type="text" class="rounded" data-bind="attr:{placeholder: currentWatermark}, value: userInput" />
                    </td>
                </tr>
                <tr>
                    <td>
                        <button data-bind="click: $root.next">Continue</button>
                    </td>
                </tr>
            </table>
        </fieldset>

@section Styles{
         <style>
                .selected {
                    color: red;
                }
                .steps {
                
                }
        </style>
}  

@section Scripts{
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/knockout")
        <script>
            function ForgotPasswordViewModel() {
                // Data
                var self = this;
                self.steps = ['@MvcApplication.GetDisplayNameFor("forgotPasswordStep0_title", "Account")',
                    '@MvcApplication.GetDisplayNameFor("forgotPasswordStep1_title", "Account")',
                    '@MvcApplication.GetDisplayNameFor("forgotPasswordStep2_title", "Account")'];
                self.legends = ['@MvcApplication.GetDisplayNameFor("forgotPasswordStep0_legend", "Account")',
                    '@MvcApplication.GetDisplayNameFor("forgotPasswordStep1_legend", "Account")',
                    '@MvcApplication.GetDisplayNameFor("forgotPasswordStep2_legend", "Account")'];
                self.watermarks = ['Email',
                    'Validation Token',
                    'Security answer']

                self.userInput = ko.observable();
                self.legendText = ko.observable();
                self.currentStepId = ko.observable();
                self.currentStepData = ko.observable();
                self.currentWatermark = ko.observable();

                // Behaviours
                self.goToStep = function (step) {
                    self.currentStepId(self.steps.indexOf(step));
                    self.legendText(self.legends[self.currentStepId()]);
                    self.currentWatermark(self.watermarks[self.currentStepId()]);
                };

                self.next = function() {
                    switch (self.currentStepId()) {
                        case 0: {
                            location.hash = "email=" + self.userInput() + "/";
                        } break;
                        case 1: {
                            location.hash = "email=" + location.hash.substr(7, location.hash.indexOf('/', 1) - 7) + "/token=" + self.userInput() + "/";
                        } break;
                        case 2: {
                            location.hash = "email=" + location.hash.substr(7, location.hash.indexOf('/', 1) - 7) + "/token=" + location.hash.substr(location.hash.indexOf('/', 1) + 7, 8) + "/finish";
                        } break;
                    }
                };

                Sammy(function () {
                    this.get('#email=:email/', function () {
                        if (self.currentStepId() == 0) {
                            $.post('@Url.Action("ForgotPassword", "Account")', { step: 0, email: this.params.email }, function (allData) {
                                if (allData.status == "success") {
                                    self.userInput("");
                                    self.goToStep(self.steps[1]);
                                }
                                else {
                                    alert(allData.reason);
                                    location.hash = "";
                                }
                            });
                        }
                    });

                    this.get('#email=:email/token=:token/', function () {
                        if (self.currentStepId() != 2) {
                            $.post('@Url.Action("ForgotPassword", "Account")', { step: 1, email: this.params.email, code: this.params.token }, function (allData) {
                                if (allData.status == "success") {
                                    self.userInput("");
                                    self.goToStep(self.steps[2]);
                                    $('#instructions_label').text(allData.securityQuestion);
                                }
                                else {
                                    alert(allData.reason);
                                    location.hash = "email=" + location.hash.substr(7, location.hash.indexOf('/', 1) - 7) + "/";
                                }
                            });
                        }
                    });

                    this.get('#email=:email/token=:token/finish', function () {
                        $.post('@Url.Action("ForgotPassword", "Account")', { step: 2, email: this.params.email, answer: self.userInput() }, function (allData) {
                            if (allData.status == "success") {
                                alert("OK");
                            }
                            else {
                                alert(allData.reason);
                                location.hash = location.hash.substr(0, location.hash.length - 7);
                            }
                        });
                    });
                }).run();

                self.goToStep(self.steps[0]);
            };

            $(function () {
                ko.applyBindings(new ForgotPasswordViewModel());
            });
        </script>
}

